// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	model "ilyakasharokov/internal/app/model"

	mock "github.com/stretchr/testify/mock"
)

// RepoModel is an autogenerated mock type for the RepoModel type
type RepoModel struct {
	mock.Mock
}

// AddItem provides a mock function with given fields: _a0, _a1, _a2
func (_m *RepoModel) AddItem(_a0 model.User, _a1 string, _a2 model.Link) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.User, string, model.Link) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CheckExist provides a mock function with given fields: _a0, _a1
func (_m *RepoModel) CheckExist(_a0 model.User, _a1 string) bool {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(model.User, string) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetByUser provides a mock function with given fields: _a0
func (_m *RepoModel) GetByUser(_a0 model.User) (model.Links, error) {
	ret := _m.Called(_a0)

	var r0 model.Links
	if rf, ok := ret.Get(0).(func(model.User) model.Links); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(model.Links)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.User) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetItem provides a mock function with given fields: _a0, _a1
func (_m *RepoModel) GetItem(_a0 model.User, _a1 string) (model.Link, error) {
	ret := _m.Called(_a0, _a1)

	var r0 model.Link
	if rf, ok := ret.Get(0).(func(model.User, string) model.Link); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(model.Link)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.User, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
